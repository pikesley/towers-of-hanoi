#!/usr/bin/env ruby

require 'httparty'
require 'json'
require 'thor'

require_relative 'lib/ruby/towers'
require_relative 'lib/ruby/constrained_towers'

INTERVAL = 0.1

def hit_phat towers
  url = 'http://localhost:5000/lights'
  payload = {
    data: towers.matrix
  }
  headers = {
    'Content-Type' => 'application/json',
    'Accept' => 'application/json'
  }

  HTTParty.patch(url, body: payload.to_json, headers: headers)
end

def display towers
  s = ''
  towers.stacks.each do |stack|
    s += stack.to_s
    s += "\n"
  end
  s += '---'

  puts s
end

class TowersSolver < Thor
  desc "phat", "solve the towers against the pHAT's webserver"
  option :constrained, type: :boolean
  def phat
    while true do
      towers = Towers.new 5
      if options[:constrained]
        towers = ConstrainedTowers.new 5
      end
      until towers.solved do
        hit_phat towers
        towers.move
        sleep INTERVAL
      end
      hit_phat towers
      sleep INTERVAL * 3
    end
  end

  desc "console", "solve the towers on the console"
  option :discs, default: 3, type: :numeric
  option :constrained, type: :boolean
  def console
    moves = 0
    towers = Towers.new options[:discs]
    if options[:constrained]
      towers = ConstrainedTowers.new options[:discs]
    end

    until towers.solved do
      display towers
      towers.move
      moves += 1
    end
    display towers

    puts "%s moves to solve %s discs" % [moves, options[:discs]]
  end
end

TowersSolver.start
